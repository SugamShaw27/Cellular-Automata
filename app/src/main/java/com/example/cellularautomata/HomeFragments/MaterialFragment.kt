package com.example.cellularautomata.HomeFragments

import adapter.MaterialListAdapter
import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.recyclerview.widget.StaggeredGridLayoutManager
import com.example.cellularautomata.databinding.FragmentMaterialBinding



class MaterialFragment : Fragment() {

    private lateinit var binding: FragmentMaterialBinding


    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Inflate the layout for this fragment
        binding= FragmentMaterialBinding.inflate(inflater,container,false)

//        requireActivity().onBackPressedDispatcher.addCallback(viewLifecycleOwner, object : OnBackPressedCallback(true) {
//            override fun handleOnBackPressed() {
//                findNavController().navigate(R.id.action_studyFragment_to_homeFragment)
//            }
//        })

        val array: ArrayList<String> = arrayListOf(
            "1. Theory and Foundations",
            "2. Components of Cellular Automata",
            "3. Types of Cellular Automata",
            "4. Emergent Behavior",
            "5. Analysis and Classification",
            "6. Key Examples",
            "7. Applications",
            "8. Research and Development",
        )

        val explanations: ArrayList<String> = arrayListOf(
            "1. Theory and Foundations covers the fundamental principles and theoretical frameworks of cellular automata (CA).\n\n2. It includes topics like Mathematical Formulation and Computational Theory, which delve into the mathematical models and computational properties of CA.",

            "1. Components of Cellular Automata focuses on the essential elements that constitute a cellular automaton.\n\n2. It includes Grid Structure, which defines the spatial arrangement of cells, and Cells and States, which refer to the individual units and their possible states within the grid.\n\n3. Neighborhood describes the local interaction rules among neighboring cells.\n\n4. Rules define the transition rules that dictate how cells change their states based on their current state and the states of neighboring cells.\n\n5. Initial Configuration refers to the starting state of the grid. \n\n6. Boundary Conditions specify how cells interact with the edges of the grid.\n\n7. Time Steps represent the discrete steps in which the CA evolves.",

            "1. Types of Cellular Automata classifies cellular automata based on their dimensional complexity.\n\n2. It includes Elementary Cellular Automata, which are one-dimensional with simple state transition rules.\n\n3. Two-Dimensional Automata expand into a two-dimensional grid, often exemplified by Conway's Game of Life.\n\n4. Higher-Dimensional Automata extend CA concepts to more complex spatial arrangements.",

            "1. Emergent Behavior explores the complex patterns and behaviors that arise from simple local rules in CA.\n\n2. It encompasses Pattern Formation, the generation of recognizable patterns over time, and Chaos and Order, examining the balance between stability and unpredictability.",

            "1. Analysis and Classification involves categorizing and studying different aspects of cellular automata.\n\n2. Rule Classification categorizes CA based on their transition rules, such as Wolfram's classification of elementary CA.\n\n3. Phase Transitions study abrupt changes in behavior due to slight variations in initial conditions or rules.",

            "1. Key Examples highlight influential and illustrative instances of cellular automata.\n\n2. Conway's Game of Life is a prominent example of a two-dimensional CA known for its rich patterns and behaviors.\n\n3. Wolfram's Elementary Cellular Automata showcase simple yet diverse patterns that arise from different rule sets.",

            "1. Applications explore practical uses of cellular automata across various disciplines.\n\n2. They include Modeling Natural Systems like biological processes and physical phenomena.\n\n3. Problem Solving and Optimization utilize CA for solving computational problems and optimizing algorithms.\n\n4. Artificial Life and Evolution simulate evolutionary processes and emergent behaviors in artificial environments.",

            "1. Research and Development focus on advancing the understanding and applications of cellular automata.\n\n2. Algorithm Design improves simulation efficiency and effectiveness.\n\n3. Visualization aids in interpreting complex patterns and behaviors generated by CA.\n\n4. Interdisciplinary Studies explore collaborative efforts integrating CA concepts across different fields of study."
        )

        val adapter = MaterialListAdapter(requireContext(),array,explanations)

        binding.recylerView.layoutManager= StaggeredGridLayoutManager(1, StaggeredGridLayoutManager.VERTICAL)
        binding.recylerView.adapter=adapter

        return binding.root
    }


}